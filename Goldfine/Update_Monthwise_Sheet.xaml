<Activity mc:Ignorable="sap sap2010" x:Class="Update_Monthwise_Sheet" this:Update_Monthwise_Sheet.in_MappingSheetPath="D:\Goldfine\Mapping SHeet.xlsx" this:Update_Monthwise_Sheet.in_PLSortedSheetFilePath="C:\Users\Dell\OneDrive\Documents\UiPath\Goldfine\Data\Output\PLSortedSheetData.xlsx" this:Update_Monthwise_Sheet.in_Month="Nov-2023" this:Update_Monthwise_Sheet.in_MonthlyFInancialReportPath="D:\Goldfine\Monthly Financial Reports.xlsx" this:Update_Monthwise_Sheet.in_OutputFolderForMIS="Data\Output\" this:Update_Monthwise_Sheet.in_BalanceSheetSortedFilePath="C:\Users\Dell\OneDrive\Documents\UiPath\Goldfine\Data\Output\BalanceSheetSortedSheetData.xlsx" this:Update_Monthwise_Sheet.in_APSummaryFilePath="D:\Goldfine\Files\APSummary.xlsx" this:Update_Monthwise_Sheet.in_ARSummaryFilePath="D:\Goldfine\Files\ARSummary.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bes="clr-namespace:BalaReva.Excel.Sheets;assembly=BalaReva.Excel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_MappingSheetPath" Type="InArgument(x:String)" />
    <x:Property Name="in_PLSortedSheetFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_Month" Type="InArgument(x:String)" />
    <x:Property Name="in_MonthlyFInancialReportPath" Type="InArgument(x:String)" />
    <x:Property Name="in_OutputFolderForMIS" Type="InArgument(x:String)" />
    <x:Property Name="in_BalanceSheetSortedFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_MonthDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_APSummaryFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_ARSummaryFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>814,5816</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Update_Monthwise_Sheet_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>BalaReva.Excel.Sheets</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Update_Monthwise_Sheet" sap:VirtualizedContainerService.HintSize="608,5751" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtMappingSheetData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPlSortedSheetData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtBalanceSheetSortedData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtAccountPayableData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtAccountReceivableData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtMappingSheetRatios" />
      <Variable x:TypeArguments="x:String" Name="sIndex" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtMappingSheetData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="546,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Mapping Sheet" WorkbookPath="[in_MappingSheetPath]" />
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtMappingSheetRatios]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="546,88" sap2010:WorkflowViewState.IdRef="ReadRange_6" SheetName="Mapping for ratios" WorkbookPath="[in_MappingSheetPath]" />
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtBalanceSheetSortedData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="546,88" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="sheet1" WorkbookPath="[in_BalanceSheetSortedFilePath]" />
    <ui:ReadRange AddHeaders="False" DataTable="[dtAccountPayableData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="546,88" sap2010:WorkflowViewState.IdRef="ReadRange_4" Range="B5" SheetName="Sheet1" WorkbookPath="[in_APSummaryFilePath]" />
    <ui:ReadRange AddHeaders="False" DataTable="[dtAccountReceivableData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="546,88" sap2010:WorkflowViewState.IdRef="ReadRange_5" Range="B5" SheetName="Sheet1" WorkbookPath="[in_ARSummaryFilePath]" />
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtPlSortedSheetData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="546,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="sheet1" WorkbookPath="[in_PLSortedSheetFilePath]" />
    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="MappedAccount" DataTable="[dtPlSortedSheetData]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="546,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtPlSortedSheetData]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="546,52" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,502" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="sValue" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[dtMappingSheetData]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="434,292" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="Ledger in QBs" LookupValue="[CurrentRow(0).ToString]" TargetColumnName="Mapped account">
              <ui:LookupDataTable.CellValue>
                <OutArgument x:TypeArguments="x:String">[sValue]</OutArgument>
              </ui:LookupDataTable.CellValue>
            </ui:LookupDataTable>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[CurrentRow(2)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[sValue]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_OutputFolderForMIS+&quot;MonthlyFinancialReport.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="546,154" sap2010:WorkflowViewState.IdRef="CopyFile_1" Path="[in_MonthlyFInancialReportPath]" />
    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="546,81" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[in_OutputFolderForMIS+&quot;MonthlyFinancialReport.xlsx&quot;]">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,383" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_1" TargetRange="[Excel.Sheet(&quot;Hide QBPnL&quot;)]" />
            <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="ClearRangeX_2" TargetRange="[Excel.Sheet(&quot;Hide QBBS&quot;)]" />
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelApplicationCard>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="546,4239" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[in_OutputFolderForMIS+&quot;MonthlyFinancialReport.xlsx&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="610,4319" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="548,3655" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtPlSortedSheetData]" DisplayName="Write Range-Updatd PL Sheet" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Hide QBPnL" StartingCell="A1" />
              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtBalanceSheetSortedData]" DisplayName="Write Range-Balance Sheet Sorted" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Hide QBBS" StartingCell="A1" />
              <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell-Update Month in Summary Sheet" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="Income Statement Summary" Text="[in_Month]" />
              <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell-UpdateMonth in Balance Sheet" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="Balance sheet" Text="[&quot;As at &quot;+in_MonthDate.AddMonths(1).AddDays(-1).ToString(&quot;dd MMM yyyy&quot;)]" />
              <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Lookup Range" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_1" Result="[sIndex]" SheetName="Income Statement-Monthwise" Value="[in_Month]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;9&quot;]" DisplayName="Write Cell-Income" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Income&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;10&quot;]" DisplayName="Write Cell-Other Income" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Other Income&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;14&quot;]" DisplayName="Write Cell-Cost of Goods Sold" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Cost of Goods Sold&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;15&quot;]" DisplayName="Write Cell-Direct Expenses" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Direct Expenses&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;22&quot;]" DisplayName="Write Cell-Advertising &amp; Marketing" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Advertising &amp; Marketing&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;23&quot;]" DisplayName="Write Cell-Bank Charges and Fees" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Bank Charges and Fees&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;24&quot;]" DisplayName="Write Cell-Payroll expenses" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Payroll expenses&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;25&quot;]" DisplayName="Write Cell-Legal &amp; Professional Services" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Legal &amp; Professional Services&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;26&quot;]" DisplayName="Write Cell-Staff Welfare Expense" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Staff Welfare Expense&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;27&quot;]" DisplayName="Write Cell-Office General Administrative Expenses" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Office General Administrative Expenses&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;28&quot;]" DisplayName="Write Cell-IT and Equipments" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;IT and Equipments&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;29&quot;]" DisplayName="Write Cell-Automobile Expense" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Automobile Expense&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;30&quot;]" DisplayName="Write Cell-Licence and Subscription Fees" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Licence and Subscription Fees&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;31&quot;]" DisplayName="Write Cell-Rental Expense" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Rental Expense&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;32&quot;]" DisplayName="Write Cell-Insurance Expense" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Insurance Expense&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;33&quot;]" DisplayName="Write Cell-Travel Expense" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Travel Expense&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;34&quot;]" DisplayName="Write Cell-Outside Services" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Outside Services&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;35&quot;]" DisplayName="Write Cell-Repair and maintenance" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Repair and maintenance&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+&quot;41&quot;]" DisplayName="Write Cell-Tax expense" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="Income Statement-Monthwise" Text="[dtPlSortedSheetData.AsEnumerable().Where(Function(row) row.Field(Of String)(&quot;MappedAccount&quot;) = &quot;Tax expense&quot;).Sum(Function(row) CDbl(row.Field(Of String)(&quot;Value&quot;))).ToString]" />
              <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell-Account Payable Month" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="Accounts Payable" Text="[&quot;As on &quot;+in_MonthDate.AddMonths(1).AddDays(-1).ToString(&quot;dd MMM yyyy&quot;)]" />
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtAccountPayableData]" DisplayName="Write Range-Account Payable Data" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Accounts Payable" StartingCell="A8" />
              <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell-Accounts Receivable Month" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="Accounts Receivable" Text="[&quot;As on &quot;+in_MonthDate.AddMonths(1).AddDays(-1).ToString(&quot;dd MMM yyyy&quot;)]" />
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtAccountReceivableData]" DisplayName="Write Range-Accounts Receivable Data" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="Accounts Receivable" StartingCell="A8" />
            </Sequence>
            <Sequence DisplayName="Update Ratios" sap:VirtualizedContainerService.HintSize="548,81" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtRatiosData" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtRatiosData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="388,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A4" SheetName="Ratios" />
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtRatiosData]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="631,2248" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="dtFilteredMapingSHeetRatios" />
                        <Variable x:TypeArguments="x:String" Name="sAmount1" />
                        <Variable x:TypeArguments="x:String" Name="sAmount2" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:FilterDataTable DataTable="[dtMappingSheetRatios]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="589,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtFilteredMapingSHeetRatios]" SelectColumnsMode="Remove">
                        <ui:FilterDataTable.Filters>
                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                            <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                              <ui:FilterOperationArgument.Column>
                                <InArgument x:TypeArguments="x:String">["Key"]</InArgument>
                              </ui:FilterOperationArgument.Column>
                              <ui:FilterOperationArgument.Operand>
                                <InArgument x:TypeArguments="x:String">[CurrentRow(1).ToString]</InArgument>
                              </ui:FilterOperationArgument.Operand>
                            </ui:FilterOperationArgument>
                          </scg:List>
                        </ui:FilterDataTable.Filters>
                        <ui:FilterDataTable.SelectColumns>
                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                            <x:Null />
                          </scg:List>
                        </ui:FilterDataTable.SelectColumns>
                      </ui:FilterDataTable>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="589,52" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Split(dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Values&quot;).ToString,&quot;,&quot;)]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="555,1022" sap2010:WorkflowViewState.IdRef="Sequence_8">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="sGetIndex" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="sGetCellValue" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Lookup Range" sap:VirtualizedContainerService.HintSize="513,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_2" Result="[sGetIndex]" SheetName="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString]" Value="[currentItem]" />
                              <If Condition="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString.Equals(&quot;Balance sheet&quot;)]" sap:VirtualizedContainerService.HintSize="513,478" sap2010:WorkflowViewState.IdRef="If_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,148" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadCell Cell="[&quot;B&quot;+System.Text.RegularExpressions.Regex.Match(sGetIndex,&quot;[0-9]+&quot;).Value]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString]">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[sGetCellValue]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,148" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+System.Text.RegularExpressions.Regex.Match(sGetIndex,&quot;[0-9]+&quot;).Value]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString]">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[sGetCellValue]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Operation&quot;).ToString]" sap:VirtualizedContainerService.HintSize="513,288" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign x:Key="Add" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[sAmount1]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(CDbl(sGetCellValue)+CDbl(sAmount1)).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign x:Key="Subtract" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[sAmount1]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(CDbl(sGetCellValue)+CDbl(sAmount1)).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Switch>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                      <Assign sap:VirtualizedContainerService.HintSize="589,82" sap2010:WorkflowViewState.IdRef="Assign_8">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentRow("Amount-1")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[sAmount1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:FilterDataTable DataTable="[dtMappingSheetRatios]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="589,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dtFilteredMapingSHeetRatios]" SelectColumnsMode="Remove">
                        <ui:FilterDataTable.Filters>
                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                            <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                              <ui:FilterOperationArgument.Column>
                                <InArgument x:TypeArguments="x:String">["Key"]</InArgument>
                              </ui:FilterOperationArgument.Column>
                              <ui:FilterOperationArgument.Operand>
                                <InArgument x:TypeArguments="x:String">[CurrentRow(3).ToString]</InArgument>
                              </ui:FilterOperationArgument.Operand>
                            </ui:FilterOperationArgument>
                          </scg:List>
                        </ui:FilterDataTable.Filters>
                        <ui:FilterDataTable.SelectColumns>
                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                            <x:Null />
                          </scg:List>
                        </ui:FilterDataTable.SelectColumns>
                      </ui:FilterDataTable>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="589,1208" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Split(dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Values&quot;).ToString,&quot;,&quot;)]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="555,1022" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="sGetIndex" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="sGetCellValue" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Lookup Range" sap:VirtualizedContainerService.HintSize="513,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_4" Result="[sGetIndex]" SheetName="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString]" Value="[currentItem]" />
                              <If Condition="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString.Equals(&quot;Balance sheet&quot;)]" sap:VirtualizedContainerService.HintSize="513,478" sap2010:WorkflowViewState.IdRef="If_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,148" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadCell Cell="[&quot;B&quot;+System.Text.RegularExpressions.Regex.Match(sGetIndex,&quot;[0-9]+&quot;).Value]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString]">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[sGetCellValue]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,148" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadCell Cell="[System.Text.RegularExpressions.Regex.Match(sIndex,&quot;[a-zA-Z]+&quot;).Value+System.Text.RegularExpressions.Regex.Match(sGetIndex,&quot;[0-9]+&quot;).Value]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString]">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[sGetCellValue]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Operation&quot;).ToString]" sap:VirtualizedContainerService.HintSize="513,288" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign x:Key="Add" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_10">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[sAmount2]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(CDbl(sGetCellValue)+CDbl(sAmount2)).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign x:Key="Subtract" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_11">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[sAmount2]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(CDbl(sGetCellValue)+CDbl(sAmount2)).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Switch>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="589,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,163" sap2010:WorkflowViewState.IdRef="Sequence_17">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Split(dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Values&quot;).ToString,&quot;,&quot;)]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="615,746" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString.Equals(&quot;Balance sheet&quot;)]" sap:VirtualizedContainerService.HintSize="573,658" sap2010:WorkflowViewState.IdRef="If_2">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="539,476" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="sGetIndex" />
                                            <Variable x:TypeArguments="ui:GenericValue" Name="sGetCellValue" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Lookup Range" sap:VirtualizedContainerService.HintSize="497,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_3" Result="[sGetIndex]" SheetName="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString]" Value="[currentItem]" />
                                          <ui:ExcelReadCell Cell="[&quot;B&quot;+System.Text.RegularExpressions.Regex.Match(sGetIndex,&quot;[0-9]+&quot;).Value]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="497,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Lookup_Sheet&quot;).ToString]">
                                            <ui:ExcelReadCell.Result>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[sGetCellValue]</OutArgument>
                                            </ui:ExcelReadCell.Result>
                                          </ui:ExcelReadCell>
                                          <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[dtFilteredMapingSHeetRatios.Rows(0).item(&quot;Operation&quot;).ToString]" sap:VirtualizedContainerService.HintSize="497,160" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                            <Assign x:Key="Add" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_5">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sAmount2]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[(CDbl(sGetCellValue)+CDbl(sAmount2)).ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign x:Key="Subtract" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_6">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sAmount2]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[(CDbl(sGetCellValue)+CDbl(sAmount2)).ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Switch>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12" />
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEach>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                      <Assign sap:VirtualizedContainerService.HintSize="589,82" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentRow("Amount-2")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[sAmount2]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="589,82" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentRow("Ratio")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[(CDbl(sAmount1)/CDbl(sAmount2)).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
              <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="Ratios" Text="[&quot;Financial Ratios - &quot;+in_Month]" />
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtRatiosData]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="Ratios" StartingCell="A5" />
            </Sequence>
            <Sequence DisplayName="Update Index" sap:VirtualizedContainerService.HintSize="548,81" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="Index" Text="[&quot;Financial Ratios - &quot;+in_Month]" />
              <ui:ExcelWriteCell Cell="C7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="Index" Text="[&quot;As of &quot;+in_Month]" />
              <ui:ExcelWriteCell Cell="C8" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_28" SheetName="Index" Text="[&quot;As of &quot;+in_Month]" />
              <ui:ExcelWriteCell Cell="C9" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_29" SheetName="Index" Text="[&quot;As of &quot;+in_Month]" />
              <ui:ExcelWriteCell Cell="C11" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_30" SheetName="Index" Text="[&quot;As of &quot;+in_Month]" />
              <ui:ExcelWriteCell Cell="C12" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_31" SheetName="Index" Text="[&quot;As of &quot;+in_Month]" />
            </Sequence>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="548,271" sap2010:WorkflowViewState.IdRef="CommentOut_2">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,192" sap2010:WorkflowViewState.IdRef="Sequence_20">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Hide Sheets" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <bes:HideUnhideWorkSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="30" DisplayName="HideUnhide" FilePath="[in_OutputFolderForMIS+&quot;MonthlyFinancialReport.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="445,71" sap2010:WorkflowViewState.IdRef="HideUnhideWorkSheet_1" SheetName="Hide QBBS" SheetVisibility="Hidden" />
                    <bes:HideUnhideWorkSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="30" DisplayName="HideUnhide" FilePath="[in_OutputFolderForMIS+&quot;MonthlyFinancialReport.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="445,71" sap2010:WorkflowViewState.IdRef="HideUnhideWorkSheet_2" SheetName="Hide QBPnL" SheetVisibility="Hidden" />
                  </Sequence>
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>